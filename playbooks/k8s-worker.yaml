---
- hosts: localhost

  gather_facts: True

  # Variables precedence (since Ansible version 2.x):
  #     - role defaults [Tasks defined outside of a role will see the last role’s defaults.]
  #     - inventory file or script group vars [Variables defined in inventory file or provided by dynamic inventory.]
  #     - inventory group_vars/all
  #     - playbook group_vars/all
  #     - inventory group_vars/*
  #     - playbook group_vars/*
  #     - inventory file or script host vars [Variables defined in inventory file or provided by dynamic inventory.]
  #     - inventory host_vars/*
  # (*) - playbook host_vars/*
  #     - host facts / cached set_facts [When created with set_facts’s cacheable option, variables will have the high
  #                                      precedence in the play, but will be the same as a host facts precedence when
  #                                      they come from the cache.]
  #     - inventory host_vars/*
  #     - playbook host_vars/*
  #     - host facts
  #     - play vars
  #     - play vars_prompt
  #     - play vars_files
  #     - role vars (defined in role/vars/main.yml)
  #     - block vars (only for tasks in block)
  #     - task vars (only for the task)
  #     - include_vars
  #     - set_facts / registered vars
  #     - role (and include_role) params
  #     - include params
  #     - extra vars (always win precedence)
  vars:
    k8s_cluster_version: ""
    k8s_cluster_name: ""
    k8s_cluster_pod_cidr: ""
    k8s_cluster_services_cidr: ""
    k8s_cluster_external_endpoint: ""
    node_type: ""
    node_name: ""
    node_private_ip: ""
    ca_crt_b64: ""
    kubelet_crt_b64: ""
    kubelet_key_b64: ""
    kube_proxy_crt_b64: ""
    kube_proxy_key_b64: ""

  pre_tasks:
    - name: "{{ ansible_play_name }} - check required inputs"
      fail:
        msg: "[ERROR] - '{{ item }}' variable is not set"
      when:
        - vars[item]|length == 0
      loop:
        - k8s_cluster_version
        - k8s_cluster_name
        - k8s_cluster_pod_cidr
        - k8s_cluster_services_cidr
        - node_type
        - node_name
        - node_private_ip
        - ca_crt_b64
        - kubelet_crt_b64
        - kubelet_key_b64
        - kube_proxy_crt_b64
        - kube_proxy_key_b64

  tasks:
    - block:
      - include_role:
          name: ansible-role-prepare-k8s-node
        vars:
          k8s_node_type: "{{ node_type }}"
          k8s_node_name: "{{ node_name }}"

      - include_role:
          name: ansible-role-openssh

      - include_role:
          name: ansible-role-cni-plugins
        vars:
          cni_plugins_version: "v0.8.6"
          cni_pod_cidr: "{{ k8s_cluster_pod_cidr }}"

      - include_role:
          name: ansible-role-containerd
        vars:
          containerd_version: "1.3.4"
          containerd_runc_version: "v1.0.0-rc90"

      - include_role:
          name: ansible-role-k8s-worker
        vars:
          k8s_worker_kubernetes_version: "{{ k8s_cluster_version }}"
          k8s_worker_kubernetes_cluster_name: "{{ k8s_cluster_name }}"
          k8s_worker_kubernetes_cluster_pod_cidr: "{{ k8s_cluster_pod_cidr }}"
          k8s_worker_kubernetes_cluster_services_cidr: "{{ k8s_cluster_services_cidr }}"
          k8s_cluster_external_endpoint: "{{ k8s_cluster_external_endpoint }}"
          k8s_worker_node_name: "{{ node_name }}"
          k8s_worker_node_private_ip: "{{ node_private_ip }}"
          k8s_worker_api_external_endpoint:
          k8s_worker_ca_cert: "{{ ca_crt_b64|b64decode }}"
          k8s_worker_kubelet_cert: "{{ kubelet_crt_b64|b64decode }}"
          k8s_worker_kubelet_key: "{{ kubelet_key_b64|b64decode }}"
          k8s_worker_kube_proxy_cert: "{{ kube_proxy_crt_b64|b64decode }}"
          k8s_worker_kube_proxy_key: "{{ kube_proxy_key_b64|b64decode }}"

      # block type
      when:
        - node_type|lower == 'worker'
