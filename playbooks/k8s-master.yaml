---
- hosts: localhost

  gather_facts: True

  # Variables precedence (since Ansible version 2.x):
  #     - role defaults [Tasks defined outside of a role will see the last role’s defaults.]
  #     - inventory file or script group vars [Variables defined in inventory file or provided by dynamic inventory.]
  #     - inventory group_vars/all
  #     - playbook group_vars/all
  #     - inventory group_vars/*
  #     - playbook group_vars/*
  #     - inventory file or script host vars [Variables defined in inventory file or provided by dynamic inventory.]
  #     - inventory host_vars/*
  # (*) - playbook host_vars/*
  #     - host facts / cached set_facts [When created with set_facts’s cacheable option, variables will have the high
  #                                      precedence in the play, but will be the same as a host facts precedence when
  #                                      they come from the cache.]
  #     - play vars
  #     - play vars_prompt
  #     - play vars_files
  #     - role vars (defined in role/vars/main.yml)
  #     - block vars (only for tasks in block)
  #     - task vars (only for the task)
  #     - include_vars
  #     - set_facts / registered vars
  #     - role (and include_role) params
  #     - include params
  #     - extra vars (always win precedence)
  vars:
    k8s_cluster_version: ""
    k8s_cluster_name: ""
    k8s_cluster_cidr: ""
    k8s_cluster_services_cidr: ""
    node_type: ""
    node_name: ""
    node_private_ip: ""
    master_node_names: ""
    master_node_ips: ""
    ca_crt_b64: ""
    ca_key_b64: ""
    kube_apiserver_crt_b64: ""
    kube_apiserver_key_b64: ""
    service_account_crt_b64: ""
    service_account_key_b64: ""
    admin_user_crt_b64: ""
    admin_user_key_b64: ""
    kube_controller_manager_crt_b64: ""
    kube_controller_manager_key_b64: ""
    kube_scheduler_crt_b64: ""
    kube_scheduler_key_b64: ""
    etcd_version: ""

  pre_tasks:
    - name: "{{ ansible_play_name }} - check required inputs"
      fail:
        msg: "[ERROR] - '{{ item }}' variable is not set"
      when:
        - vars[item]|length == 0
      loop:
        - k8s_cluster_version
        - k8s_cluster_name
        - k8s_cluster_cidr
        - k8s_cluster_services_cidr
        - node_type
        - node_name
        - node_private_ip
        - master_node_names
        - master_node_ips
        - ca_crt_b64
        - ca_key_b64
        - kube_apiserver_crt_b64
        - kube_apiserver_key_b64
        - admin_user_crt_b64
        - admin_user_key_b64
        - kube_controller_manager_crt_b64
        - kube_controller_manager_key_b64
        - service_account_crt_b64
        - service_account_key_b64
        - kube_scheduler_crt_b64
        - kube_scheduler_key_b64
        - etcd_version

  tasks:
    - block:
      - include_role:
          name: ansible-role-prepare-k8s-node
        vars:
          k8s_node_type: "{{ node_type }}"
          k8s_node_name: "{{ node_name }}"

      - include_role:
          name: ansible-role-openssh

      - include_role:
          name: ansible-role-etcd
        vars:
          etcd_version: "{{ etcd_version }}"
          etcd_node_name: "{{ node_name }}"
          etcd_node_private_ip: "{{ node_private_ip }}"
          etcd_initial_cluster_member_names: "{{ master_node_names }}"
          etcd_initial_cluster_member_ips: "{{ master_node_ips }}"
          etcd_ca_cert: "{{ ca_crt_b64|b64decode }}"
          etcd_tls_cert: "{{ kube_apiserver_crt_b64|b64decode }}"
          etcd_tls_key: "{{ kube_apiserver_key_b64|b64decode }}"

      - include_role:
          name: ansible-role-k8s-control-plane
        vars:
          control_plane_kubernetes_version: "{{ k8s_cluster_version }}"
          control_plane_coredns_version: "1.6.7"
          control_plane_kubernetes_cluster_name: "{{ k8s_cluster_name }}"
          control_plane_kubernetes_cluster_cidr: "{{ k8s_cluster_cidr }}"
          control_plane_kubernetes_cluster_services_cidr: "{{ k8s_cluster_services_cidr }}"
          control_plane_kubernetes_cluster_master_ips: "{{ master_node_ips }}"
          control_plane_node_name: "{{ node_name }}"
          control_plane_node_private_ip: "{{ node_private_ip }}"
          control_plane_ca_cert: "{{ ca_crt_b64|b64decode }}"
          control_plane_ca_key: "{{ ca_key_b64|b64decode }}"
          control_plane_kube_apiserver_cert: "{{ kube_apiserver_crt_b64|b64decode }}"
          control_plane_kube_apiserver_key: "{{ kube_apiserver_key_b64|b64decode }}"
          control_plane_admin_user_cert: "{{ admin_user_crt_b64|b64decode }}"
          control_plane_admin_user_key: "{{ admin_user_key_b64|b64decode }}"
          control_plane_kube_controller_manager_cert: "{{ kube_controller_manager_crt_b64|b64decode }}"
          control_plane_kube_controller_manager_key: "{{ kube_controller_manager_key_b64|b64decode }}"
          control_plane_service_account_cert: "{{ service_account_crt_b64|b64decode }}"
          control_plane_service_account_key: "{{ service_account_key_b64|b64decode }}"
          control_plane_kube_scheduler_cert: "{{ kube_scheduler_crt_b64|b64decode }}"
          control_plane_kube_scheduler_key: "{{ kube_scheduler_key_b64|b64decode }}"

      - include_role:
          name: ansible-role-nginx
        vars:
          nginx_version: "1.18.0"
          nginx_certificates:
            - name: ca.crt
              content: "{{ ca_crt_b64|b64decode }}"
          nginx_vhosts:
            - name: default
              vhost_config: |
                server {
                    listen          80 default_server;
                    server_name     _ "";

                    access_log      off;
                    log_not_found   off;

                    return          444;
                }
            - name: kubernetes-api-health-check
              vhost_config: |
                map $http_upgrade $connection_upgrade {
                    default         "upgrade";
                    ""              close;
                }
                server {
                    listen 80;

                    server_name kubernetes.default.svc.cluster.local;

                    location /healthz {
                        proxy_pass                      https://127.0.0.1:6443/healthz;
                        proxy_ssl_trusted_certificate   /etc/nginx/ssl/ca.crt;
                        proxy_http_version              1.1;
                        proxy_set_header                Host               $host;
                        proxy_set_header                X-Real-IP          $remote_addr;
                        proxy_set_header                X-Forwarded-Proto  $scheme;
                        proxy_set_header                X-Forwarded-For    $proxy_add_x_forwarded_for;
                        proxy_set_header                Upgrade            $http_upgrade;
                        proxy_set_header                Connection         $connection_upgrade;
                        proxy_pass_header               X-XSRF-TOKEN;
                        proxy_connect_timeout           10s;
                        proxy_read_timeout              300s;
                        proxy_send_timeout              300s;
                        proxy_buffering                 off;
                    }

                    ############################
                    # Section for search engines
                    ###
                    location /favicon.ico {
                        access_log    off;
                        log_not_found off;
                    }
                    location /robots.txt {
                        access_log    off;
                        log_not_found off;
                    }
                    #######################################################################
                    # This prevents hidden files (beginning with a period) from being served
                    ###
                    location ~ /\. {
                      access_log    off;
                      log_not_found off;
                      deny          all;
                    }
                }

      # block type
      when:
        - node_type|lower == 'master'
